# Generated by Django 5.2 on 2025-05-16 16:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "resource_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("links", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                ("tag_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "post_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "post_type",
                    models.CharField(
                        choices=[
                            ("Job", "job"),
                            ("General", "general"),
                            ("Resource", "resource"),
                            ("Event", "event"),
                            ("Project", "project"),
                        ],
                        default="General",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("links", models.TextField(blank=True, null=True)),
                ("start_time", models.DateTimeField()),
                (
                    "location",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[("Slack", "Slack"), ("App", "App")],
                        default="App",
                        max_length=5,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "comment_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "comment_text",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="ccserver.post",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slack_username",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "linkedin_username",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "github_username",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "personal_site",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "country",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "state",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "photo_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "employment_status",
                    models.CharField(
                        choices=[
                            ("Employed", "employed"),
                            ("Searching", "searching"),
                            ("Hiring", "hiring"),
                            ("Student", "student"),
                        ],
                        default="Searching",
                        max_length=20,
                    ),
                ),
                (
                    "job_title",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "company",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "bio",
                    models.TextField(blank=True, max_length=600, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResourceTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ccserver.resource",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ccserver.tag",
                    ),
                ),
            ],
            options={
                "unique_together": {("resource", "tag")},
            },
        ),
        migrations.AddField(
            model_name="resource",
            name="tags",
            field=models.ManyToManyField(
                related_name="resource_tags",
                through="ccserver.ResourceTag",
                to="ccserver.tag",
            ),
        ),
        migrations.CreateModel(
            name="ProfileTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ccserver.profile",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ccserver.tag",
                    ),
                ),
            ],
            options={
                "unique_together": {("profile", "tag")},
            },
        ),
        migrations.AddField(
            model_name="profile",
            name="tags",
            field=models.ManyToManyField(
                related_name="user_tags",
                through="ccserver.ProfileTag",
                to="ccserver.tag",
            ),
        ),
        migrations.CreateModel(
            name="PostTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ccserver.post",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ccserver.tag",
                    ),
                ),
            ],
            options={
                "unique_together": {("post", "tag")},
            },
        ),
        migrations.AddField(
            model_name="post",
            name="tags",
            field=models.ManyToManyField(
                related_name="post_tags",
                through="ccserver.PostTag",
                to="ccserver.tag",
            ),
        ),
    ]

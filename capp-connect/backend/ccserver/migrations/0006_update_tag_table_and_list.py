# Generated by Django 5.2 on 2025-05-18 19:08

from django.db import migrations


def load_tag_list(apps, schema_editor):
    Tag = apps.get_model("ccserver", "Tag")
    overall_tag_list = [
        "climate policy",
        "education policy",
        "crime policy",
        "housing policy",
        "urban policy",
        "energy policy",
        "health policy",
        "economic policy",
        "gender policy",
        "environmental policy",
        "water policy",
        "agricultural policy",
        "conservation policy",
        "science and technology policy",
        "transportation policy",
        "international development",
        "government",
        "political data",
        "social justice",
        "transparency",
        "bias",
        "civic engagement",
        "accessibility",
        "AI ethics",
        "data privacy",
        "civic tech",
        "Python",
        "R",
        "Stata",
        "JavaScript",
        "Java",
        "C",
        "C++",
        "C#",
        "Go",
        "Rust",
        "Ruby",
        "Swift",
        "Kotlin",
        "Scala",
        "Perl",
        "Haskell",
        "Shell",
        "Bash",
        "PowerShell",
        "Visual Basic",
        "Assembly",
        "MATLAB",
        "Julia",
        "SQL",
        "machine learning",
        "artificial intelligence",
        "natural language processing",
        "data science",
        "data engineering",
        "software engineering",
        "software development",
        "data architecture",
        "analytics",
        "statistics",
        "GIS",
        "big data",
        "impact evaluation",
        "algorithms",
        "project management",
        "product management",
        "UI/UX",
        "cloud computing",
        "distributed systems",
        "deep learning",
        "computer vision",
        "causal inference",
        "data visualization",
        "backend development",
        "frontend development",
        "mobile development",
        "full-stack development",
        "systems programming",
        "API design",
        "quality assurance",
        "cybersecurity",
        "Django",
        "Flask",
        "React",
        "Vue.js",
        "Next.js",
        "Node.js",
        "Spring Boot",
        ".NET",
        "TensorFlow",
        "PyTorch",
        "Hadoop",
        "Spark",
        "agile",
        "human-centered design",
        "tutorial",
        "startup",
    ]
    
    non_profile_tag_list = [
        "full-time",
        "part-time",
        "internship",
        "fellowship",
        "salary",
        "electives",
        "alumni",
        "curriculum",
        "tutorial",
        "interview preparation",
        "job board",
        "hackathon",
        "networking",
        "resume",
    ]
    
    for tag_name in overall_tag_list:
        Tag.objects.update_or_create(tag_name=tag_name,defaults={"allowed_on_profile": True})

    for tag_name in non_profile_tag_list:
        Tag.objects.update_or_create(tag_name=tag_name,defaults={"allowed_on_profile": False})



class Migration(migrations.Migration):
    dependencies = [
        ("ccserver", "0005_tag_allowed_on_profile_alter_post_post_type"),
    ]

    operations = [migrations.RunPython(load_tag_list)]
